<!DOCTYPE html>

<html>
  <head>
    <title>ByteMap</title>
    <%= stylesheet_link_tag "application", media: "all"%>
    <%= javascript_include_tag "application"%>
    <%= csrf_meta_tags %>
    <link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
    <script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
  	<script src="//maps.google.com/maps/api/js?v=3.13&amp;sensor=false&amp;libraries=geometry" type="text/javascript"></script>
  	<script src='//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js' type='text/javascript'></script>
    <script>
      $(function() {
        $( "#accordion" ).accordion({
          collapsible: true
        });
      });
      $(function() {
        $( "#accordion" ).accordion({
          event: "click hoverintent"
        });
      });
     
      /*
       * hoverIntent | Copyright 2011 Brian Cherne
       * http://cherne.net/brian/resources/jquery.hoverIntent.html
       * modified by the jQuery UI team
       */
      $.event.special.hoverintent = {
        setup: function() {
          $( this ).bind( "mouseover", jQuery.event.special.hoverintent.handler );
        },
        teardown: function() {
          $( this ).unbind( "mouseover", jQuery.event.special.hoverintent.handler );
        },
        handler: function( event ) {
          var currentX, currentY, timeout,
            args = arguments,
            target = $( event.target ),
            previousX = event.pageX,
            previousY = event.pageY;
     
          function track( event ) {
            currentX = event.pageX;
            currentY = event.pageY;
          };
     
          function clear() {
            target
              .unbind( "mousemove", track )
              .unbind( "mouseout", clear );
            clearTimeout( timeout );
          }
     
          function handler() {
            var prop,
              orig = event;
     
            if ( ( Math.abs( previousX - currentX ) +
                Math.abs( previousY - currentY ) ) < 7 ) {
              clear();
     
              event = $.Event( "hoverintent" );
              for ( prop in orig ) {
                if ( !( prop in event ) ) {
                  event[ prop ] = orig[ prop ];
                }
              }
              // Prevent accessing the original event since the new event
              // is fired asynchronously and the old event is no longer
              // usable (#6028)
              delete event.originalEvent;
     
              target.trigger( event );
            } else {
              previousX = currentX;
              previousY = currentY;
              timeout = setTimeout( handler, 100 );
            }
          }
     
          timeout = setTimeout( handler, 100 );
          target.bind({
            mousemove: track,
            mouseout: clear
          });
        }
      };
    </script>
  </head>
  <body>
    <%= render :partial => 'layouts/partials/navbar'%>
    <%= yield :scripts %>
    <%= yield %>
  </body>
</html>

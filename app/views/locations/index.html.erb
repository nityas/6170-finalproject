

<h1>Listing locations</h1>

<table>
  <thead>
    <tr>
      <th>Latitude</th>
      <th>Longitude</th>
      <th>Address</th>
      <th>Custom ID</th>
      <th>Name</th>
      <th>Description</th>
      <th></th>
      <th></th>
      <th></th>
    </tr>
  </thead>

  <tbody>
    <% @locations.each do |location| %>
      <tr>
        <td><%= location.latitude %></td>
        <td><%= location.longitude %></td>
        <td><%= location.address %></td>
        <td><%= location.customid %></td>
        <td><%= location.title %></td>
        <td><%= location.description %></td>
        <td><%= link_to 'Show', location %></td>
        <td><%= link_to 'Edit', edit_location_path(location) %></td>
        <td><%= link_to 'Destroy', location, method: :delete, data: { confirm: 'Are you sure?' } %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br>

<!--<%= link_to 'New Location', new_location_path %>-->


<%= text_field_tag "query", nil, :placeholder => "i.e. Stata", :id => "queryField" %>
<%= submit_tag "search", :id => "search" %>


<%= render partial: 'map.html.erb'%>

<script type="text/javascript">
options = 
{
    maxZoom:19,
    minZoom:15,
};

var allowedbound = new google.maps.LatLngBounds(new google.maps.LatLng(42.340, -71.20), new google.maps.LatLng(42.370, -71.0));

handler = Gmaps.build('Google', options);
handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
  markers = handler.addMarkers(<%=raw @hash.to_json %>);
  handler.bounds.extendWith(markers);
  handler.fitMapToBounds();
  handler.getMap().setCenter(new google.maps.LatLng(42.359, -71.090413));
  handler.getMap().setOptions(options);
});
var lastValidCenter = map.getCenter();
var map = handler.getMap();
map.event.addListener(map, 'center_changed', function() {
    if (allowedBounds.contains(map.getCenter())) {
        // still within valid bounds, so save the last valid position
        lastValidCenter = map.getCenter();
        return; 
    }else{
      alert();
    }

    // not valid anymore => return to last valid position
    map.panTo(lastValidCenter);
});


/*
  Sends user's search query to whereis.mit.edu and gets back information for this potential location.
*/
</script>